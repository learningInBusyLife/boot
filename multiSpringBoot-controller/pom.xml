<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <artifactId>multiSpringBoot-controller</artifactId>
    <groupId>com.lick</groupId>
    <version>1.0-SNAPSHOT</version>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <name>multiSpringBoot-controller</name>
    <url>http://maven.apache.org</url>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.8.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <multiSpringBoot-service.version>1.0-SNAPSHOT</multiSpringBoot-service.version>
        <multiSpringBoot-common.version>1.0-SNAPSHOT</multiSpringBoot-common.version>
        <multiSpringBoot-model.version>1.0-SNAPSHOT</multiSpringBoot-model.version>
        <junit.verison>3.8.1</junit.verison>
        <tomcat.verison>1.5.8.RELEASE</tomcat.verison>
    </properties>

    <dependencies>
        <!--项目依赖 -->
        <dependency>
            <groupId>com.lick</groupId>
            <artifactId>multiSpringBoot-service</artifactId>
            <version>${multiSpringBoot-service.version}</version>
        </dependency>
        <dependency>
            <groupId>com.lick</groupId>
            <artifactId>multiSpringBoot-common</artifactId>
            <version>${multiSpringBoot-common.version}</version>
        </dependency>
        <dependency>
            <groupId>com.lick</groupId>
            <artifactId>multiSpringBoot-model</artifactId>
            <version>${multiSpringBoot-model.version}</version>
        </dependency>
        <!--springboot 组件依赖 -->
        <!--thymeleaf 前端模板组件 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!--web组件 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--热部署 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.verison}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <version>${tomcat.verison}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                    <!-- 打包成可直接运行的jar -->
                    <executable>true</executable>
                </configuration>
            </plugin>
            <plugin>
                <!-- The plugin rewrites your manifest -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration><!-- 指定该Main Class为全局的唯一入口 -->
                    <mainClass>App</mainClass>
                    <layout>ZIP</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal><!--可以把依赖的包都打包到生成的Jar包中 -->
                        </goals>
                        <!--可以生成不含依赖包的不可执行Jar包 -->
                        <!-- configuration> <classifier>exec</classifier> </configuration> -->
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
